import { Value, View, ViewProps } from '@tweakpane/core';
import { Thumbnail } from './controller.js';
interface Config {
    value: Value<Thumbnail | null>;
    valueOptions: Thumbnail[];
    viewProps: ViewProps;
}
export declare class PluginView implements View {
    readonly element: HTMLElement;
    private doc_;
    private value_;
    private valueOptions_;
    private overlayEl_;
    private selectEl_;
    private selectThumbEl_;
    private selectLabelEl_;
    private optionEls_;
    constructor(doc: Document, config: Config);
    private init_;
    /** Updates UI state after a value change. */
    private refresh_;
    /** Opens the overlay. */
    private open_;
    /** Closes the overlay. */
    private close_;
    /** Selects the thumbnail element clicked. */
    private onSelect_;
    /** Given a click event somewhere in an option, finds the nearest option element. */
    private findOptionEl_;
    /** Change handler. */
    private onValueChange_;
}
export {};
